from app.data_base import sessionLocal
from app.models import Book, Review, User
from contextlib import contextmanager


books = [
"Михаил Булгаков; Мастер и Маргарита",
"Лев Толстой; Война и мир",
"Фёдор Достоевский; Преступление и наказание",
"Александр Пушкин; Евгений Онегин",
"Николай Гоголь; Мёртвые души",
"Иван Тургенев; Отцы и дети",
"Антон Чехов; Вишнёвый сад",
"Илья Ильф и Евгений Петров; Двенадцать стульев",
"Борис Пастернак; Доктор Живаго",
"Александр Солженицын; Архипелаг ГУЛАГ",
"Владимир Набоков; Лолита",
"Максим Горький; Мать",
"Михаил Шолохов; Тихий Дон",
"Андрей Платонов; Котлован",
"Василий Гроссман; Жизнь и судьба",
"Владимир Маяковский; Облако в штанах",
"Осип Мандельштам; Камень",
"Анна Ахматова; Реквием",
"Марина Цветаева; Стихотворения",
"Сергей Есенин; Стихотворения2",
"Александр Блок; Двенадцать",
"Даниил Хармс; Случаи",
"Исаак Бабель; Конармия",
"Виктор Пелевин; Generation «П»",
"Людмила Улицкая; Казус Кукоцкого",
"Виктор Астафьев; Царь-рыба",
"Валентин Распутин; Прощание с Матёрой",
"Юрий Бондарев; Горячий снег",
"Владимир Высоцкий; Стихотворения и песни",
"Андрей Битов; Пушкинский дом",
"Александр Куприн; Гранатовый браслет",
"Леонид Андреев; Красный смех",
"Василий Шукшин; Рассказы",
"Юрий Трифонов; Дом на набережной",
"Чингиз Айтматов; И дольше века длится день",
"Александр Грин; Алые паруса",
"Аркадий и Борис Стругацкие; Пикник на обочине",
"Евгений Замятин; Мы",
"Алексей Толстой; Гиперболоид инженера Гарина",
"Кир Булычёв; Приключения Алисы",
"Николай Лесков; Левша",
"Иван Бунин; Тёмные аллеи",
"Александр Чудаков; Ложится мгла на старые ступени",
"Андрей Рубанов; Психодел",
"Ольга Славникова; 2017",
"Дмитрий Быков; ЖД",
"Евгений Водолазкин; Лавр",
"Гузель Яхина; Зулейха открывает глаза",
"Алексей Иванов; Географ глобус пропил",
"Сергей Довлатов; Чемодан",
"Владимир Войнович; Жизнь и необычайные приключения солдата Ивана Чонкина",
"Юрий Поляков; Апофегей",
"Александр Твардовский; Василий Тёркин",
"Константин Симонов; Жди меня",
"Борис Васильев; А зори здесь тихие...",
"Анатолий Рыбаков; Дети Арбата",
"Виктор Некрасов; В окопах Сталинграда",
"Леонид Леонов; Русский лес",
"Юрий Домбровский; Факультет ненужных вещей",
"Василий Аксёнов; Остров Крым",
"Александр Бек; Волоколамское шоссе",
"Александр Фадеев; Молодая гвардия",
"Николай Островский; Как закалялась сталь",
"Владимир Короленко; Слепой музыкант",
"Павел Бажов; Малахитовая шкатулка",
"Аркадий Аверченко; Рассказы2",
"Михаил Зощенко; Рассказы3",
"Константин Паустовский; Повесть о жизни",
"Илья Эренбург; Люди, годы, жизнь",
"Владимир Тендряков; Ночь после выпуска",
"Валентин Катаев; Белеет парус одинокий",
"Юрий Казаков; Тихое утро. Рассказы",
"Георгий Владимов; Верный Руслан",
"Василий Белов; Привычное дело",
"Виктор Суворов; Аквариум",
"Александр Проханов; Господин Гексоген",
"Захар Прилепин; Санькя",
"Алексей Сальников; Петровы в гриппе и вокруг него",
"Олег Павлов; Казённая сказка",
"Александр Кабаков; Невозвращенец",
"Александр Иличевский; Матисс",
"Михаил Веллер; Легенды Невского проспекта",
"Татьяна Толстая; Кысь",
"Виктор Ерофеев; Русская красавица",
"Александр Терехов; Каменный мост",
"Михаил Елизаров; Библиотекарь",
"Мария Степанова; Памяти памяти",
"Александр Архангельский; Музей революции",
"Александр Иличевский; Перс",
"Сергей Лукьяненко; Ночной дозор",
"Дмитрий Глуховский; Метро 2033",
"Андрей Рубанов; Сажайте и вырастет",
"Александр Мелихов; Сапфировый альбатрос",
]

@contextmanager
def get_db():
    db = sessionLocal()
    try:
        yield db
    finally:
        db.close()

def add_book():
    with get_db() as db:
        for book in books:
            try:
                book_info = book.split("; ")
                new_book = Book(title=book_info[1], author=book_info[0])
                db.add(new_book)
            except Exception:
                pass
        db.commit()


def add_users():
    users = [
            "user1; user1@mail.ru; user1.password",
             "user2; user2@mail.ru; user2.password",
             "user3; user3@mail.ru; user3.password"
             ]
    with get_db() as db:
        for user in users:
            try:
                user_info = user.split("; ")
                new_user = User(username=user_info[0], email=user_info[1], password=user_info[2])
                db.add(new_user)
            except Exception:
                pass
        db.commit()

def add_reviews():
    reviews = [
        "Это рецензия на книгу 1 от читателя 1; 10; 1; 1",
        "Это рецензия на книгу 1 от читателя 2; 10; 2; 1",
        "Это рецензия на книгу 1 от читателя 3; 10; 3; 1",
        "Это рецензия на книгу 2 от читателя 1; 10; 1; 2",
        "Это рецензия на книгу 2 от читателя 2; 10; 2; 2",
        "Это рецензия на книгу 2 от читателя 3; 10; 3; 2",
        "Это рецензия на книгу 3 от читателя 1; 10; 1; 3",
        "Это рецензия на книгу 3 от читателя 2; 10; 2; 3",
        "Это рецензия на книгу 3 от читателя 3; 10; 3; 3",
        "Это рецензия на книгу 4 от читателя 1; 10; 1; 4",
        "Это рецензия на книгу 4 от читателя 2; 10; 2; 4",
        "Это рецензия на книгу 4 от читателя 3; 10; 3; 4",
        "Это рецензия на книгу 5 от читателя 1; 10; 1; 5",
        "Это рецензия на книгу 5 от читателя 2; 10; 2; 5",
        "Это рецензия на книгу 5 от читателя 3; 10; 3; 5",
        "Это рецензия на книгу 6 от читателя 1; 10; 1; 6",
        "Это рецензия на книгу 6 от читателя 2; 10; 2; 6",
        "Это рецензия на книгу 6 от читателя 3; 10; 3; 6",
    ]
    with get_db() as db:
        for review in reviews:
            try:
                review_info = review.split("; ")
                new_review = Review(text=review_info[0], rating=int(review_info[1]), user_id=int(review_info[2]),
                                    book_id=int(review_info[3]))
                db.add(new_review)
            except Exception:
                pass
        db.commit()
if __name__ == '__main__':
    #add_book()
    #add_users()
    add_reviews()